import {
  InputType,
  InputType_String_GetTypes,
  InputType_Number_GetTypes,
  InputType_Map_GetTypes,
} from "../../ds_base/InputType";
import { DS_Resource } from "../../ds_base/Resource";
import { DynamicUIProps } from "../../ds_base/DynamicUIProps";
import {
  ec2_VpcIpamPoolCidrCidrAuthorizationContext,
  ec2_VpcIpamPoolCidrCidrAuthorizationContext_GetTypes,
} from "../types/ec2_VpcIpamPoolCidrCidrAuthorizationContext";

export interface VpcIpamPoolCidrArgs {
  // The CIDR you want to assign to the pool. Conflicts with `netmask_length`.
  cidr?: string;

  // A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP. This is not stored in the state file. See cidr_authorization_context for more information.
  cidrAuthorizationContext?: ec2_VpcIpamPoolCidrCidrAuthorizationContext;

  // The ID of the pool to which you want to assign a CIDR.
  ipamPoolId?: string;

  // If provided, the cidr provisioned into the specified pool will be the next available cidr given this declared netmask length. Conflicts with `cidr`.
  netmaskLength?: number;
}
export class VpcIpamPoolCidr extends DS_Resource {
  // The unique ID generated by AWS for the pool cidr. Typically this is the resource `id` but this attribute was added to the API calls after the fact and is therefore not used as the resource id.
  public ipamPoolCidrId?: string;

  // The ID of the pool to which you want to assign a CIDR.
  public ipamPoolId?: string;

  // If provided, the cidr provisioned into the specified pool will be the next available cidr given this declared netmask length. Conflicts with `cidr`.
  public netmaskLength?: number;

  // The CIDR you want to assign to the pool. Conflicts with `netmask_length`.
  public cidr?: string;

  // A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP. This is not stored in the state file. See cidr_authorization_context for more information.
  public cidrAuthorizationContext?: ec2_VpcIpamPoolCidrCidrAuthorizationContext;

  public static GetTypes(): DynamicUIProps[] {
    return [
      new DynamicUIProps(
        InputType.String,
        "cidr",
        "The CIDR you want to assign to the pool. Conflicts with `netmask_length`.",
        () => [],
        false,
        true,
      ),
      new DynamicUIProps(
        InputType.Object,
        "cidrAuthorizationContext",
        "A signed document that proves that you are authorized to bring the specified IP address range to Amazon using BYOIP. This is not stored in the state file. See cidr_authorization_context for more information.",
        () => ec2_VpcIpamPoolCidrCidrAuthorizationContext_GetTypes(),
        false,
        true,
      ),
      new DynamicUIProps(
        InputType.String,
        "ipamPoolId",
        "The ID of the pool to which you want to assign a CIDR.",
        () => [],
        true,
        true,
      ),
      new DynamicUIProps(
        InputType.Number,
        "netmaskLength",
        "If provided, the cidr provisioned into the specified pool will be the next available cidr given this declared netmask length. Conflicts with `cidr`.",
        () => [],
        false,
        true,
      ),
    ];
  }
}
