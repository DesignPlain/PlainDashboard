import {
  InputType,
  InputType_String_GetTypes,
  InputType_Number_GetTypes,
  InputType_Map_GetTypes,
} from "../../ds_base/InputType";
import { DynamicUIProps } from "../../ds_base/DynamicUIProps";

export interface cloudrun_getServiceTemplateMetadata {
  // A sequence number representing a specific generation of the desired state.
  generation?: number;

  /*
Map of string keys and values that can be used to organize and categorize
(scope and select) objects.
*/
  labels?: Map<string, string>;

  // The name of the Cloud Run Service.
  name?: string;

  /*
In Cloud Run the namespace must be equal to either the
project ID or project number. It will default to the resource's project.
*/
  namespace?: string;

  /*
An opaque value that represents the internal version of this object that
can be used by clients to determine when objects have changed. May be used
for optimistic concurrency, change detection, and the watch operation on a
resource or set of resources. They may only be valid for a
particular resource or set of resources.
*/
  resourceVersion?: string;

  // SelfLink is a URL representing this object.
  selfLink?: string;

  /*
UID is a unique id generated by the server on successful creation of a resource and is not
allowed to change on PUT operations.
*/
  uid?: string;

  //
  annotations?: Map<string, string>;
}

export function cloudrun_getServiceTemplateMetadata_GetTypes(): DynamicUIProps[] {
  return [
    new DynamicUIProps(
      InputType.String,
      "selfLink",
      "SelfLink is a URL representing this object.",
      () => [],
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "uid",
      "UID is a unique id generated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.",
      () => [],
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.Map,
      "annotations",
      "",
      () => InputType_Map_GetTypes(),
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.Number,
      "generation",
      "A sequence number representing a specific generation of the desired state.",
      () => [],
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.Map,
      "labels",
      "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects.",
      () => InputType_Map_GetTypes(),
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "name",
      "The name of the Cloud Run Service.",
      () => [],
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "namespace",
      "In Cloud Run the namespace must be equal to either the\nproject ID or project number. It will default to the resource's project.",
      () => [],
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "resourceVersion",
      "An opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. They may only be valid for a\nparticular resource or set of resources.",
      () => [],
      true,
      false,
    ),
  ];
}
