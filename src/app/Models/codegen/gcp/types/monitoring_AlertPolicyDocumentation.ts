import {
  InputType,
  InputType_String_GetTypes,
  InputType_Number_GetTypes,
  InputType_Map_GetTypes,
} from '../../ds_base/InputType';
import { DynamicUIProps } from '../../ds_base/DynamicUIProps';

export interface monitoring_AlertPolicyDocumentation {
  /*
The format of the content field. Presently, only the value
"text/markdown" is supported.
*/
  mimeType?: string;

  /*
The subject line of the notification. The subject line may not
exceed 10,240 bytes. In notifications generated by this policy the contents
of the subject line after variable expansion will be truncated to 255 bytes
or shorter at the latest UTF-8 character boundary.
*/
  subject?: string;

  /*
The text of the documentation, interpreted according to mimeType.
The content may not exceed 8,192 Unicode characters and may not
exceed more than 10,240 bytes when encoded in UTF-8 format,
whichever is smaller.
*/
  content?: string;
}

export function monitoring_AlertPolicyDocumentation_GetTypes(): DynamicUIProps[] {
  return [
    new DynamicUIProps(
      InputType.String,
      'mimeType',
      'The format of the content field. Presently, only the value\n"text/markdown" is supported.',
      () => [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      'subject',
      'The subject line of the notification. The subject line may not\nexceed 10,240 bytes. In notifications generated by this policy the contents\nof the subject line after variable expansion will be truncated to 255 bytes\nor shorter at the latest UTF-8 character boundary.',
      () => [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      'content',
      'The text of the documentation, interpreted according to mimeType.\nThe content may not exceed 8,192 Unicode characters and may not\nexceed more than 10,240 bytes when encoded in UTF-8 format,\nwhichever is smaller.',
      () => [],
      false,
      false,
    ),
  ];
}
