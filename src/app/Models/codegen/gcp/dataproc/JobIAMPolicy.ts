import {
  InputType,
  InputType_String_GetTypes,
  InputType_Number_GetTypes,
  InputType_Map_GetTypes,
} from '../../ds_base/InputType';
import { DS_Resource } from '../../ds_base/Resource';
import { DynamicUIProps } from '../../ds_base/DynamicUIProps';

export interface JobIAMPolicyArgs {
  /*
The project in which the job belongs. If it
is not provided, the provider will use a default.
*/
  project?: string;

  /*
The region in which the job belongs. If it
is not provided, the provider will use a default.
*/
  region?: string;

  //
  jobId?: string;

  /*
The policy data generated by a `gcp.organizations.getIAMPolicy` data source.

- - -
*/
  policyData?: string;
}
export class JobIAMPolicy extends DS_Resource {
  /*
The project in which the job belongs. If it
is not provided, the provider will use a default.
*/
  public project?: string;

  /*
The region in which the job belongs. If it
is not provided, the provider will use a default.
*/
  public region?: string;

  // (Computed) The etag of the jobs's IAM policy.
  public etag?: string;

  //
  public jobId?: string;

  /*
The policy data generated by a `gcp.organizations.getIAMPolicy` data source.

- - -
*/
  public policyData?: string;

  public static GetTypes(): DynamicUIProps[] {
    return [
      new DynamicUIProps(
        InputType.String,
        'project',
        'The project in which the job belongs. If it\nis not provided, the provider will use a default.',
        () => [],
        false,
        true,
      ),
      new DynamicUIProps(
        InputType.String,
        'region',
        'The region in which the job belongs. If it\nis not provided, the provider will use a default.',
        () => [],
        false,
        true,
      ),
      new DynamicUIProps(InputType.String, 'jobId', '', () => [], true, true),
      new DynamicUIProps(
        InputType.String,
        'policyData',
        'The policy data generated by a `gcp.organizations.getIAMPolicy` data source.\n\n- - -',
        () => [],
        true,
        false,
      ),
    ];
  }
}
