import {
  InputType,
  InputType_String_GetTypes,
  InputType_Number_GetTypes,
  InputType_Map_GetTypes,
} from "src/app/enum/InputType";
import { Resource } from "src/app/Models/CloudResource";
import { DynamicUIProps } from 'src/app/components/resource-config/DynamicUIProps';

export interface EventSubscriptionArgs {
  // A boolean flag to enable/disable the subscription. Defaults to true.
  enabled?: boolean;

  // A list of event categories for a SourceType that you want to subscribe to. See http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html or run `aws rds describe-event-categories`.
  eventCategories?: Array<string>;

  // The name of the DB event subscription. By default generated by this provider.
  name?: string;

  // The name of the DB event subscription. Conflicts with `name`.
  namePrefix?: string;

  // The SNS topic to send events to.
  snsTopic?: string;

  // A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.
  sourceIds?: Array<string>;

  // The type of source that will be generating the events. Valid options are `db-instance`, `db-security-group`, `db-parameter-group`, `db-snapshot`, `db-cluster`, `db-cluster-snapshot`, or `db-proxy`. If not set, all sources will be subscribed to.
  sourceType?: string;

  // A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tags?: Map<string, string>;
}
export class EventSubscription extends Resource {
  // The Amazon Resource Name of the RDS event notification subscription
  public arn?: string;

  // The AWS customer account associated with the RDS event notification subscription
  public customerAwsId?: string;

  // A boolean flag to enable/disable the subscription. Defaults to true.
  public enabled?: boolean;

  // A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.
  public sourceIds?: Array<string>;

  // The type of source that will be generating the events. Valid options are `db-instance`, `db-security-group`, `db-parameter-group`, `db-snapshot`, `db-cluster`, `db-cluster-snapshot`, or `db-proxy`. If not set, all sources will be subscribed to.
  public sourceType?: string;

  // A list of event categories for a SourceType that you want to subscribe to. See http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html or run `aws rds describe-event-categories`.
  public eventCategories?: Array<string>;

  // The name of the DB event subscription. By default generated by this provider.
  public name?: string;

  // The name of the DB event subscription. Conflicts with `name`.
  public namePrefix?: string;

  // The SNS topic to send events to.
  public snsTopic?: string;

  // A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  public tags?: Map<string, string>;

  // A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  public tagsAll?: Map<string, string>;

  public static GetTypes(): DynamicUIProps[] {
    return [
      new DynamicUIProps(
        InputType.String,
        "name",
        "The name of the DB event subscription. By default generated by this provider.",
        [],
        false,
        true,
      ),
      new DynamicUIProps(
        InputType.String,
        "namePrefix",
        "The name of the DB event subscription. Conflicts with `name`.",
        [],
        false,
        true,
      ),
      new DynamicUIProps(
        InputType.String,
        "snsTopic",
        "The SNS topic to send events to.",
        [],
        true,
        false,
      ),
      new DynamicUIProps(
        InputType.Array,
        "sourceIds",
        "A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a source_type must also be specified.",
        InputType_String_GetTypes(),
        false,
        false,
      ),
      new DynamicUIProps(
        InputType.String,
        "sourceType",
        "The type of source that will be generating the events. Valid options are `db-instance`, `db-security-group`, `db-parameter-group`, `db-snapshot`, `db-cluster`, `db-cluster-snapshot`, or `db-proxy`. If not set, all sources will be subscribed to.",
        [],
        false,
        false,
      ),
      new DynamicUIProps(
        InputType.Map,
        "tags",
        "A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.",
        InputType_Map_GetTypes(),
        false,
        false,
      ),
      new DynamicUIProps(
        InputType.Bool,
        "enabled",
        "A boolean flag to enable/disable the subscription. Defaults to true.",
        [],
        false,
        false,
      ),
      new DynamicUIProps(
        InputType.Array,
        "eventCategories",
        "A list of event categories for a SourceType that you want to subscribe to. See http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html or run `aws rds describe-event-categories`.",
        InputType_String_GetTypes(),
        false,
        false,
      ),
    ];
  }
}
