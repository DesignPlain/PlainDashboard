import {
  InputType,
  InputType_String_GetTypes,
  InputType_Number_GetTypes,
  InputType_Map_GetTypes,
} from "src/app/enum/InputType";
import { Resource } from "src/app/Models/CloudResource";
import { DynamicUIProps } from "src/app/components/resource-config/resource-config.component";

export interface EventSubscriptionArgs {
  // A boolean flag to enable/disable the subscription. Defaults to true.
  enabled?: boolean;

  // A list of event categories for a `source_type` that you want to subscribe to. Run `aws neptune describe-event-categories` to find all the event categories.
  eventCategories?: Array<string>;

  // The name of the Neptune event subscription. By default generated by this provider.
  name?: string;

  // The name of the Neptune event subscription. Conflicts with `name`.
  namePrefix?: string;

  // The ARN of the SNS topic to send events to.
  snsTopicArn?: string;

  // A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a `source_type` must also be specified.
  sourceIds?: Array<string>;

  // The type of source that will be generating the events. Valid options are `db-instance`, `db-security-group`, `db-parameter-group`, `db-snapshot`, `db-cluster` or `db-cluster-snapshot`. If not set, all sources will be subscribed to.
  sourceType?: string;

  // A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  tags?: Map<string, string>;
}
export class EventSubscription extends Resource {
  // A list of event categories for a `source_type` that you want to subscribe to. Run `aws neptune describe-event-categories` to find all the event categories.
  public eventCategories?: Array<string>;

  // The name of the Neptune event subscription. By default generated by this provider.
  public name?: string;

  // The name of the Neptune event subscription. Conflicts with `name`.
  public namePrefix?: string;

  // A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a `source_type` must also be specified.
  public sourceIds?: Array<string>;

  // The type of source that will be generating the events. Valid options are `db-instance`, `db-security-group`, `db-parameter-group`, `db-snapshot`, `db-cluster` or `db-cluster-snapshot`. If not set, all sources will be subscribed to.
  public sourceType?: string;

  // A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
  public tags?: Map<string, string>;

  // The Amazon Resource Name of the Neptune event notification subscription.
  public arn?: string;

  // A boolean flag to enable/disable the subscription. Defaults to true.
  public enabled?: boolean;

  // The ARN of the SNS topic to send events to.
  public snsTopicArn?: string;

  // A map of tags assigned to the resource, including those inherited from the provider `default_tags` configuration block.
  public tagsAll?: Map<string, string>;

  // The AWS customer account associated with the Neptune event notification subscription.
  public customerAwsId?: string;

  public static GetTypes(): DynamicUIProps[] {
    return [
      new DynamicUIProps(
        InputType.Map,
        "tags",
        "A map of tags to assign to the resource. .If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.",
        InputType_Map_GetTypes(),
        false,
        false,
      ),
      new DynamicUIProps(
        InputType.Bool,
        "enabled",
        "A boolean flag to enable/disable the subscription. Defaults to true.",
        [],
        false,
        false,
      ),
      new DynamicUIProps(
        InputType.Array,
        "eventCategories",
        "A list of event categories for a `source_type` that you want to subscribe to. Run `aws neptune describe-event-categories` to find all the event categories.",
        InputType_String_GetTypes(),
        false,
        false,
      ),
      new DynamicUIProps(
        InputType.String,
        "name",
        "The name of the Neptune event subscription. By default generated by this provider.",
        [],
        false,
        true,
      ),
      new DynamicUIProps(
        InputType.String,
        "namePrefix",
        "The name of the Neptune event subscription. Conflicts with `name`.",
        [],
        false,
        true,
      ),
      new DynamicUIProps(
        InputType.String,
        "snsTopicArn",
        "The ARN of the SNS topic to send events to.",
        [],
        true,
        false,
      ),
      new DynamicUIProps(
        InputType.Array,
        "sourceIds",
        "A list of identifiers of the event sources for which events will be returned. If not specified, then all sources are included in the response. If specified, a `source_type` must also be specified.",
        InputType_String_GetTypes(),
        false,
        false,
      ),
      new DynamicUIProps(
        InputType.String,
        "sourceType",
        "The type of source that will be generating the events. Valid options are `db-instance`, `db-security-group`, `db-parameter-group`, `db-snapshot`, `db-cluster` or `db-cluster-snapshot`. If not set, all sources will be subscribed to.",
        [],
        false,
        false,
      ),
    ];
  }
}
