import {
  InputType,
  InputType_String_GetTypes,
  InputType_Number_GetTypes,
  InputType_Map_GetTypes,
} from "src/app/enum/InputType";
import { Resource } from "src/app/Models/CloudResource";
import { DynamicUIProps } from "src/app/components/resource-config/resource-config.component";

export interface TenantArgs {
  // Whether to allow email/password user authentication.
  AllowPasswordSignup?: boolean;

  /*
Whether authentication is disabled for the tenant. If true, the users under
the disabled tenant are not allowed to sign-in. Admins of the disabled tenant
are not able to manage its users.
*/
  DisableAuth?: boolean;

  /*
Human friendly display name of the tenant.


- - -
*/
  DisplayName?: string;

  // Whether to enable email link user authentication.
  EnableEmailLinkSignin?: boolean;

  /*
The ID of the project in which the resource belongs.
If it is not provided, the provider project is used.
*/
  Project?: string;
}
export class Tenant extends Resource {
  // The name of the tenant that is generated by the server
  public Name?: string;

  /*
The ID of the project in which the resource belongs.
If it is not provided, the provider project is used.
*/
  public Project?: string;

  // Whether to allow email/password user authentication.
  public AllowPasswordSignup?: boolean;

  /*
Whether authentication is disabled for the tenant. If true, the users under
the disabled tenant are not allowed to sign-in. Admins of the disabled tenant
are not able to manage its users.
*/
  public DisableAuth?: boolean;

  /*
Human friendly display name of the tenant.


- - -
*/
  public DisplayName?: string;

  // Whether to enable email link user authentication.
  public EnableEmailLinkSignin?: boolean;

  public static GetTypes(): DynamicUIProps[] {
    return [
      new DynamicUIProps(
        InputType.Bool,
        "EnableEmailLinkSignin",
        "Whether to enable email link user authentication.",
        [],
        false,
        false,
      ),
      new DynamicUIProps(
        InputType.String,
        "Project",
        "The ID of the project in which the resource belongs.\nIf it is not provided, the provider project is used.",
        [],
        false,
        true,
      ),
      new DynamicUIProps(
        InputType.Bool,
        "AllowPasswordSignup",
        "Whether to allow email/password user authentication.",
        [],
        false,
        false,
      ),
      new DynamicUIProps(
        InputType.Bool,
        "DisableAuth",
        "Whether authentication is disabled for the tenant. If true, the users under\nthe disabled tenant are not allowed to sign-in. Admins of the disabled tenant\nare not able to manage its users.",
        [],
        false,
        false,
      ),
      new DynamicUIProps(
        InputType.String,
        "DisplayName",
        "Human friendly display name of the tenant.\n\n\n- - -",
        [],
        true,
        false,
      ),
    ];
  }
}
