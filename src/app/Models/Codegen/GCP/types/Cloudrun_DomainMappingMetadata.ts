import {
  InputType,
  InputType_String_GetTypes,
  InputType_Number_GetTypes,
  InputType_Map_GetTypes,
} from "src/app/enum/InputType";
import { DynamicUIProps } from "src/app/components/resource-config/resource-config.component";

export interface Cloudrun_DomainMappingMetadata {
  /*
(Output)
The combination of labels configured directly on the resource
and default labels configured on the provider.
*/
  PulumiLabels?: Map<string, string>;

  /*
(Output)
SelfLink is a URL representing this object.
*/
  SelfLink?: string;

  /*
Annotations is a key value map stored with a resource that
may be set by external tools to store and retrieve arbitrary metadata. More
info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
--Note--: The Cloud Run API may add additional annotations that were not provided in your config.
If the provider plan shows a diff where a server-side annotation is added, you can add it to your config
or apply the lifecycle.ignore_changes rule to the metadata.0.annotations field.
--Note--: This field is non-authoritative, and will only manage the annotations present in your configuration.
Please refer to the field `effective_annotations` for all of the annotations present on the resource.
*/
  Annotations?: Map<string, string>;

  /*
(Output)
All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
*/
  EffectiveLabels?: Map<string, string>;

  /*
(Output)
A sequence number representing a specific generation of the desired state.
*/
  Generation?: number;

  /*
Map of string keys and values that can be used to organize and categorize
(scope and select) objects. May match selectors of replication controllers
and routes.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
--Note--: This field is non-authoritative, and will only manage the labels present in your configuration.
Please refer to the field `effective_labels` for all of the labels present on the resource.
*/
  Labels?: Map<string, string>;

  /*
In Cloud Run the namespace must be equal to either the
project ID or project number.
*/
  Namespace?: string;

  /*
(Output)
An opaque value that represents the internal version of this object that
can be used by clients to determine when objects have changed. May be used
for optimistic concurrency, change detection, and the watch operation on a
resource or set of resources. They may only be valid for a
particular resource or set of resources.
More info:
https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
*/
  ResourceVersion?: string;

  /*
(Output)
UID is a unique id generated by the server on successful creation of a resource and is not
allowed to change on PUT operations.
More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
*/
  Uid?: string;

  //
  EffectiveAnnotations?: Map<string, string>;
}

export function Cloudrun_DomainMappingMetadata_GetTypes(): DynamicUIProps[] {
  return [
    new DynamicUIProps(
      InputType.Number,
      "Generation",
      "(Output)\nA sequence number representing a specific generation of the desired state.",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "Uid",
      "(Output)\nUID is a unique id generated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.Map,
      "Labels",
      "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand routes.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n**Note**: This field is non-authoritative, and will only manage the labels present in your configuration.\nPlease refer to the field `effective_labels` for all of the labels present on the resource.",
      InputType_Map_GetTypes(),
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "Namespace",
      "In Cloud Run the namespace must be equal to either the\nproject ID or project number.",
      [],
      true,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "ResourceVersion",
      "(Output)\nAn opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. They may only be valid for a\nparticular resource or set of resources.\nMore info:\nhttps://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.Map,
      "EffectiveAnnotations",
      "",
      InputType_Map_GetTypes(),
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.Map,
      "PulumiLabels",
      "(Output)\nThe combination of labels configured directly on the resource\nand default labels configured on the provider.",
      InputType_Map_GetTypes(),
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "SelfLink",
      "(Output)\nSelfLink is a URL representing this object.",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.Map,
      "Annotations",
      "Annotations is a key value map stored with a resource that\nmay be set by external tools to store and retrieve arbitrary metadata. More\ninfo: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n**Note**: The Cloud Run API may add additional annotations that were not provided in your config.\nIf the provider plan shows a diff where a server-side annotation is added, you can add it to your config\nor apply the lifecycle.ignore_changes rule to the metadata.0.annotations field.\n**Note**: This field is non-authoritative, and will only manage the annotations present in your configuration.\nPlease refer to the field `effective_annotations` for all of the annotations present on the resource.",
      InputType_Map_GetTypes(),
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.Map,
      "EffectiveLabels",
      "(Output)\nAll of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.",
      InputType_Map_GetTypes(),
      false,
      true,
    ),
  ];
}
