import {
  InputType,
  InputType_String_GetTypes,
  InputType_Number_GetTypes,
  InputType_Map_GetTypes,
} from "src/app/enum/InputType";
import { DynamicUIProps } from "src/app/components/resource-config/resource-config.component";

export interface Certificateauthority_CertificateConfigPublicKey {
  /*
The format of the public key. Currently, only PEM format is supported.
Possible values are: `KEY_TYPE_UNSPECIFIED`, `PEM`.
*/
  Format?: string;

  // Required. A public key. When this is specified in a request, the padding and encoding can be any of the options described by the respective 'KeyType' value. When this is generated by the service, it will always be an RFC 5280 SubjectPublicKeyInfo structure containing an algorithm identifier and a key. A base64-encoded string.
  Key?: string;
}

export function Certificateauthority_CertificateConfigPublicKey_GetTypes(): DynamicUIProps[] {
  return [
    new DynamicUIProps(
      InputType.String,
      "Format",
      "The format of the public key. Currently, only PEM format is supported.\nPossible values are: `KEY_TYPE_UNSPECIFIED`, `PEM`.",
      [],
      true,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "Key",
      "Required. A public key. When this is specified in a request, the padding and encoding can be any of the options described by the respective 'KeyType' value. When this is generated by the service, it will always be an RFC 5280 SubjectPublicKeyInfo structure containing an algorithm identifier and a key. A base64-encoded string.",
      [],
      false,
      true,
    ),
  ];
}
