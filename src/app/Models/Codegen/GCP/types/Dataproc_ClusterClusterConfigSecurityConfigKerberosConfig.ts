import {
  InputType,
  InputType_String_GetTypes,
  InputType_Number_GetTypes,
  InputType_Map_GetTypes,
} from "src/app/enum/InputType";
import { DynamicUIProps } from "src/app/components/resource-config/resource-config.component";

export interface Dataproc_ClusterClusterConfigSecurityConfigKerberosConfig {
  /*
The Cloud Storage URI of a KMS
encrypted file containing the shared password between the on-cluster Kerberos realm
and the remote trusted realm, in a cross realm trust relationship.
*/
  CrossRealmTrustSharedPasswordUri?: string;

  /*
The name of the on-cluster Kerberos realm. If not specified, the
uppercased domain of hostnames will be the realm.
*/
  Realm?: string;

  /*
The Cloud Storage URI of a KMS encrypted file
containing the password to the user provided truststore. For the self-signed
certificate, this password is generated by Dataproc.
*/
  TruststorePasswordUri?: string;

  /*
The Cloud Storage URI of a KMS encrypted file containing
the master key of the KDC database.
*/
  KdcDbKeyUri?: string;

  /*
The Cloud Storage URI of the keystore file used for SSL encryption.
If not provided, Dataproc will provide a self-signed certificate.
*/
  KeystoreUri?: string;

  // The URI of the KMS key used to encrypt various sensitive files.
  KmsKeyUri?: string;

  // The lifetime of the ticket granting ticket, in hours.
  TgtLifetimeHours?: number;

  /*
The Cloud Storage URI of the truststore file used for
SSL encryption. If not provided, Dataproc will provide a self-signed certificate.

- - -
*/
  TruststoreUri?: string;

  /*
The admin server (IP or hostname) for the
remote trusted realm in a cross realm trust relationship.
*/
  CrossRealmTrustAdminServer?: string;

  // Flag to indicate whether to Kerberize the cluster.
  EnableKerberos?: boolean;

  /*
The KDC (IP or hostname) for the
remote trusted realm in a cross realm trust relationship.
*/
  CrossRealmTrustKdc?: string;

  /*
The remote realm the Dataproc on-cluster KDC will
trust, should the user enable cross realm trust.
*/
  CrossRealmTrustRealm?: string;

  /*
The Cloud Storage URI of a KMS encrypted file containing
the password to the user provided key. For the self-signed certificate, this password
is generated by Dataproc.
*/
  KeyPasswordUri?: string;

  /*
The Cloud Storage URI of a KMS encrypted file containing
the password to the user provided keystore. For the self-signed certificated, the password
is generated by Dataproc.
*/
  KeystorePasswordUri?: string;

  /*
The Cloud Storage URI of a KMS encrypted file
containing the root principal password.
*/
  RootPrincipalPasswordUri?: string;
}

export function Dataproc_ClusterClusterConfigSecurityConfigKerberosConfig_GetTypes(): DynamicUIProps[] {
  return [
    new DynamicUIProps(
      InputType.String,
      "Realm",
      "The name of the on-cluster Kerberos realm. If not specified, the\nuppercased domain of hostnames will be the realm.",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "KeystoreUri",
      "The Cloud Storage URI of the keystore file used for SSL encryption.\nIf not provided, Dataproc will provide a self-signed certificate.",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "TruststoreUri",
      "The Cloud Storage URI of the truststore file used for\nSSL encryption. If not provided, Dataproc will provide a self-signed certificate.\n\n- - -",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "CrossRealmTrustAdminServer",
      "The admin server (IP or hostname) for the\nremote trusted realm in a cross realm trust relationship.",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "CrossRealmTrustSharedPasswordUri",
      "The Cloud Storage URI of a KMS\nencrypted file containing the shared password between the on-cluster Kerberos realm\nand the remote trusted realm, in a cross realm trust relationship.",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "KdcDbKeyUri",
      "The Cloud Storage URI of a KMS encrypted file containing\nthe master key of the KDC database.",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.Bool,
      "EnableKerberos",
      "Flag to indicate whether to Kerberize the cluster.",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "CrossRealmTrustKdc",
      "The KDC (IP or hostname) for the\nremote trusted realm in a cross realm trust relationship.",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "KeyPasswordUri",
      "The Cloud Storage URI of a KMS encrypted file containing\nthe password to the user provided key. For the self-signed certificate, this password\nis generated by Dataproc.",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.Number,
      "TgtLifetimeHours",
      "The lifetime of the ticket granting ticket, in hours.",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "TruststorePasswordUri",
      "The Cloud Storage URI of a KMS encrypted file\ncontaining the password to the user provided truststore. For the self-signed\ncertificate, this password is generated by Dataproc.",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "KmsKeyUri",
      "The URI of the KMS key used to encrypt various sensitive files.",
      [],
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "CrossRealmTrustRealm",
      "The remote realm the Dataproc on-cluster KDC will\ntrust, should the user enable cross realm trust.",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "KeystorePasswordUri",
      "The Cloud Storage URI of a KMS encrypted file containing\nthe password to the user provided keystore. For the self-signed certificated, the password\nis generated by Dataproc.",
      [],
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "RootPrincipalPasswordUri",
      "The Cloud Storage URI of a KMS encrypted file\ncontaining the root principal password.",
      [],
      true,
      false,
    ),
  ];
}
