import {
  InputType,
  InputType_String_GetTypes,
  InputType_Number_GetTypes,
  InputType_Map_GetTypes,
} from "src/app/enum/InputType";
import { DynamicUIProps } from "src/app/components/resource-config/resource-config.component";
import {
  Cloudbuild_TriggerBitbucketServerTriggerConfigPullRequest,
  Cloudbuild_TriggerBitbucketServerTriggerConfigPullRequest_GetTypes,
} from "./Cloudbuild_TriggerBitbucketServerTriggerConfigPullRequest";
import {
  Cloudbuild_TriggerBitbucketServerTriggerConfigPush,
  Cloudbuild_TriggerBitbucketServerTriggerConfigPush_GetTypes,
} from "./Cloudbuild_TriggerBitbucketServerTriggerConfigPush";

export interface Cloudbuild_TriggerBitbucketServerTriggerConfig {
  // The Bitbucket server config resource that this trigger config maps to.
  BitbucketServerConfigResource?: string;

  // Key of the project that the repo is in. For example: The key for https://mybitbucket.server/projects/TEST/repos/test-repo is "TEST".
  ProjectKey?: string;

  /*
Filter to match changes in pull requests.
Structure is documented below.
*/
  PullRequest?: Cloudbuild_TriggerBitbucketServerTriggerConfigPullRequest;

  /*
Filter to match changes in refs like branches, tags.
Structure is documented below.
*/
  Push?: Cloudbuild_TriggerBitbucketServerTriggerConfigPush;

  /*
Slug of the repository. A repository slug is a URL-friendly version of a repository name, automatically generated by Bitbucket for use in the URL.
For example, if the repository name is 'test repo', in the URL it would become 'test-repo' as in https://mybitbucket.server/projects/TEST/repos/test-repo.
*/
  RepoSlug?: string;
}

export function Cloudbuild_TriggerBitbucketServerTriggerConfig_GetTypes(): DynamicUIProps[] {
  return [
    new DynamicUIProps(
      InputType.String,
      "RepoSlug",
      "Slug of the repository. A repository slug is a URL-friendly version of a repository name, automatically generated by Bitbucket for use in the URL.\nFor example, if the repository name is 'test repo', in the URL it would become 'test-repo' as in https://mybitbucket.server/projects/TEST/repos/test-repo.",
      [],
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "BitbucketServerConfigResource",
      "The Bitbucket server config resource that this trigger config maps to.",
      [],
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "ProjectKey",
      'Key of the project that the repo is in. For example: The key for https://mybitbucket.server/projects/TEST/repos/test-repo is "TEST".',
      [],
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.Object,
      "PullRequest",
      "Filter to match changes in pull requests.\nStructure is documented below.",
      Cloudbuild_TriggerBitbucketServerTriggerConfigPullRequest_GetTypes(),
      false,
      false,
    ),
    new DynamicUIProps(
      InputType.Object,
      "Push",
      "Filter to match changes in refs like branches, tags.\nStructure is documented below.",
      Cloudbuild_TriggerBitbucketServerTriggerConfigPush_GetTypes(),
      false,
      false,
    ),
  ];
}
