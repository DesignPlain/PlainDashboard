import {
  InputType,
  InputType_String_GetTypes,
  InputType_Number_GetTypes,
  InputType_Map_GetTypes,
} from "src/app/enum/InputType";
import { DynamicUIProps } from "src/app/components/resource-config/resource-config.component";

export interface Dataproc_WorkflowTemplatePlacementManagedClusterConfigSecurityConfigKerberosConfig {
  // The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
  CrossRealmTrustAdminServer?: string;

  // The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
  Truststore?: string;

  // The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
  KeyPassword?: string;

  // The Cloud Storage URI of a KMS encrypted file containing the root principal password.
  RootPrincipalPassword?: string;

  // The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
  Keystore?: string;

  // The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
  Realm?: string;

  // The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
  TgtLifetimeHours?: number;

  // The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
  CrossRealmTrustSharedPassword?: string;

  // The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
  KdcDbKey?: string;

  // Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
  EnableKerberos?: boolean;

  // The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
  KeystorePassword?: string;

  // The uri of the KMS key used to encrypt various sensitive files.
  KmsKey?: string;

  // The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
  TruststorePassword?: string;

  // The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
  CrossRealmTrustKdc?: string;

  // The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
  CrossRealmTrustRealm?: string;
}

export function Dataproc_WorkflowTemplatePlacementManagedClusterConfigSecurityConfigKerberosConfig_GetTypes(): DynamicUIProps[] {
  return [
    new DynamicUIProps(
      InputType.String,
      "CrossRealmTrustSharedPassword",
      "The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.",
      [],
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "TruststorePassword",
      "The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.",
      [],
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "CrossRealmTrustKdc",
      "The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.",
      [],
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "CrossRealmTrustAdminServer",
      "The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.",
      [],
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "Truststore",
      "The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.",
      [],
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.Number,
      "TgtLifetimeHours",
      "The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.",
      [],
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "Keystore",
      "The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.",
      [],
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "KmsKey",
      "The uri of the KMS key used to encrypt various sensitive files.",
      [],
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "CrossRealmTrustRealm",
      "The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.",
      [],
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.Bool,
      "EnableKerberos",
      "Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.",
      [],
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "KeystorePassword",
      "The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.",
      [],
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "KeyPassword",
      "The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.",
      [],
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "RootPrincipalPassword",
      "The Cloud Storage URI of a KMS encrypted file containing the root principal password.",
      [],
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "KdcDbKey",
      "The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.",
      [],
      false,
      true,
    ),
    new DynamicUIProps(
      InputType.String,
      "Realm",
      "The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.",
      [],
      false,
      true,
    ),
  ];
}
