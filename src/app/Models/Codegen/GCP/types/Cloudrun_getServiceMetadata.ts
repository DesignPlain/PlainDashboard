import {
  InputType,
  InputType_String_GetTypes,
  InputType_Number_GetTypes,
  InputType_Map_GetTypes,
} from "src/app/enum/InputType";
import { DynamicUIProps } from "src/app/components/resource-config/resource-config.component";

export interface cloudrun_getServiceMetadata {
  /*
UID is a unique id generated by the server on successful creation of a resource and is not
allowed to change on PUT operations.
*/
  uid?: string;

  /*
Map of string keys and values that can be used to organize and categorize
(scope and select) objects. May match selectors of replication controllers
and routes.

--Note--: This field is non-authoritative, and will only manage the labels present in your configuration.
Please refer to the field 'effective_labels' for all of the labels present on the resource.
*/
  labels?: Map<string, string>;

  /*
In Cloud Run the namespace must be equal to either the
project ID or project number.
*/
  namespace?: string;

  //
  effectiveLabels?: Map<string, string>;

  // A sequence number representing a specific generation of the desired state.
  generation?: number;

  /*
The combination of labels configured directly on the resource
 and default labels configured on the provider.
*/
  pulumiLabels?: Map<string, string>;

  /*
An opaque value that represents the internal version of this object that
can be used by clients to determine when objects have changed. May be used
for optimistic concurrency, change detection, and the watch operation on a
resource or set of resources. They may only be valid for a
particular resource or set of resources.
*/
  resourceVersion?: string;

  // SelfLink is a URL representing this object.
  selfLink?: string;

  //
  annotations?: Map<string, string>;

  //
  effectiveAnnotations?: Map<string, string>;
}

export function cloudrun_getServiceMetadata_GetTypes(): DynamicUIProps[] {
  return [
    new DynamicUIProps(
      InputType.String,
      "namespace",
      "In Cloud Run the namespace must be equal to either the\nproject ID or project number.",
      [],
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.Map,
      "pulumiLabels",
      "The combination of labels configured directly on the resource\n and default labels configured on the provider.",
      InputType_Map_GetTypes(),
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "selfLink",
      "SelfLink is a URL representing this object.",
      [],
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.Map,
      "effectiveAnnotations",
      "",
      InputType_Map_GetTypes(),
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "uid",
      "UID is a unique id generated by the server on successful creation of a resource and is not\nallowed to change on PUT operations.",
      [],
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.Map,
      "labels",
      "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand routes.\n\n**Note**: This field is non-authoritative, and will only manage the labels present in your configuration.\nPlease refer to the field 'effective_labels' for all of the labels present on the resource.",
      InputType_Map_GetTypes(),
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.String,
      "resourceVersion",
      "An opaque value that represents the internal version of this object that\ncan be used by clients to determine when objects have changed. May be used\nfor optimistic concurrency, change detection, and the watch operation on a\nresource or set of resources. They may only be valid for a\nparticular resource or set of resources.",
      [],
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.Map,
      "annotations",
      "",
      InputType_Map_GetTypes(),
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.Map,
      "effectiveLabels",
      "",
      InputType_Map_GetTypes(),
      true,
      false,
    ),
    new DynamicUIProps(
      InputType.Number,
      "generation",
      "A sequence number representing a specific generation of the desired state.",
      [],
      true,
      false,
    ),
  ];
}
