import { PosturePolicySetPolicyConstraintSecurityHealthAnalyticsCustomModuleConfigPredicate } from "./PosturePolicySetPolicyConstraintSecurityHealthAnalyticsCustomModuleConfigPredicate";
import { PosturePolicySetPolicyConstraintSecurityHealthAnalyticsCustomModuleConfigResourceSelector } from "./PosturePolicySetPolicyConstraintSecurityHealthAnalyticsCustomModuleConfigResourceSelector";
import { PosturePolicySetPolicyConstraintSecurityHealthAnalyticsCustomModuleConfigCustomOutput } from "./PosturePolicySetPolicyConstraintSecurityHealthAnalyticsCustomModuleConfigCustomOutput";

export interface PosturePolicySetPolicyConstraintSecurityHealthAnalyticsCustomModuleConfig {
  /*
An explanation of the recommended steps that security teams can take to
resolve the detected issue
*/
  Recommendation?: string;

  /*
The resource types that the custom module operates on. Each custom module
can specify up to 5 resource types.
Structure is documented below.
*/
  ResourceSelector?: PosturePolicySetPolicyConstraintSecurityHealthAnalyticsCustomModuleConfigResourceSelector;

  /*
The severity to assign to findings generated by the module.
Possible values are: `SEVERITY_UNSPECIFIED`, `CRITICAL`, `HIGH`, `MEDIUM`, `LOW`.
*/
  Severity?: string;

  /*
Custom output properties. A set of optional name-value pairs that define custom source properties to
return with each finding that is generated by the custom module. The custom
source properties that are defined here are included in the finding JSON
under `sourceProperties`.
Structure is documented below.
*/
  CustomOutput?: PosturePolicySetPolicyConstraintSecurityHealthAnalyticsCustomModuleConfigCustomOutput;

  /*
Text that describes the vulnerability or misconfiguration that the custom
module detects.
*/
  Description?: string;

  /*
The CEL expression to evaluate to produce findings.When the expression
evaluates to true against a resource, a finding is generated.
Structure is documented below.
*/
  Predicate?: PosturePolicySetPolicyConstraintSecurityHealthAnalyticsCustomModuleConfigPredicate;
}
